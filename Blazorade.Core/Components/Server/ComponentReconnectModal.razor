@inherits BlazoradeComponentBase

<style type="text/css">

    #components-reconnect-modal,
    #components-reconnect-modal.components-reconnect-hide,
    #components-reconnect-modal .reconnect-state {
        display: none;
    }

        #components-reconnect-modal.components-reconnect-show,
        #components-reconnect-modal.components-reconnect-failed,
        #components-reconnect-modal.components-reconnect-rejected,
        #components-reconnect-modal.components-reconnect-show .reconnect-state.show,
        #components-reconnect-modal.components-reconnect-failed .reconnect-state.failed,
        #components-reconnect-modal.components-reconnect-rejected .reconnect-state.rejected {
            display: block;
        }

    #components-reconnect-modal {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: @(this.BackdropBackgroundColor);
    }

        #components-reconnect-modal .reconnect-state {
            padding: @(this.ConnectionStatePadding);
            background-color: @(this.ConnectionStateBackgroundColor);
        }
</style>

<div id="components-reconnect-modal">
    <div class="reconnect-state show">
        @if (null != this.ReconnectingTemplate)
        {
            @this.ReconnectingTemplate
        }
        else
        {
            <span>Seems like the connection with the server has been lost. It can be due to poor or broken network. Please hang on while we're trying to reconnect...</span>
        }
    </div>

    <div class="reconnect-state failed">
        @if(null != this.ReconnectFailedTemplate)
        {
            @this.ReconnectFailedTemplate
        }
        else
        {
            <span>Oh snap! Failed to reconnect with the server. This is typically caused by a longer network outage, or if the server has been taken down. You can try to <a href="javascript:window.Blazor.reconnect()">reconnect</a>, but if that does not work, you need to <a href="javascript:location.reload()">reload</a> the page.</span>
        }
    </div>
    <div class="reconnect-state rejected">
        @if(null != this.ReconnectRejectedTemplate)
        {
            @this.ReconnectRejectedTemplate
        }
        else
        {
            <span>Oh man! The server rejected the attempt to reconnect. The only option now is to <a href="javascript:location.reload()">reload</a> the page, but be prepared that it won't work, since this is typically caused by a failure on the server.</span>
        }
    </div>
</div>